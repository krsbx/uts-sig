/* eslint-disable @typescript-eslint/ban-ts-comment */
//! Do not edit this file manually, it is generate by `prisma repo generator`

import {
  PrismaClient,
  Prisma,
  KantorPln,
  KantorPos,
  Spbu,
  SeedHistory,
  AdministrasiKabupaten,
  AdministrasiKecamatan,
} from '@prisma/client';
import _ from 'lodash';

// eslint-disable-next-line @typescript-eslint/no-explicit-any
export type AnyRecord = Record<string, any>;

export type BaseOption<Include, Select> = {
  include?: Include;
  select?: Select;
};

export type Find<Select, Include, Cursor, Order, Distinct> = BaseOption<
  Include,
  Select
> & {
  cursor?: Cursor;
  take?: number;
  skip?: number;
  orderBy?: Prisma.Enumerable<Order>;
  distinct?: Distinct;
};

export type CountArgs<Select, Cursor, Order, Distinct> = Omit<
  Find<Select, never, Cursor, Order, Distinct>,
  'include'
>;

export type Aggregate<Cursor, Order, Distinct> = Omit<
  CountArgs<never, Cursor, Order, Distinct>,
  'select' | 'distinct'
>;

export const prisma = new PrismaClient({
  log: ['error', 'info', 'query', 'warn'],
});

export const models = _.omit(prisma, [
  '$on',
  '$connect',
  '$disconnect',
  '$use',
  '$executeRaw',
  '$executeRawUnsafe',
  '$queryRaw',
  '$queryRawUnsafe',
  '$transaction',
]);

export const MODELS_NAME = {
  KANTOR_PLN: 'kantorPln',
  KANTOR_POS: 'kantorPos',
  SPBU: 'spbu',
  SEED_HISTORY: 'seedHistory',
  ADMINISTRASI_KABUPATEN: 'administrasiKabupaten',
  ADMINISTRASI_KECAMATAN: 'administrasiKecamatan',
} as const;

// eslint-disable-next-line @typescript-eslint/ban-types
export type ModelStructure = {
  kantorPln: KantorPln;
  kantorPos: KantorPos;
  spbu: Spbu;
  seedHistory: SeedHistory;
  administrasiKabupaten: AdministrasiKabupaten;
  administrasiKecamatan: AdministrasiKecamatan;
};

export type ModelName = keyof ModelStructure;

export type ModelScalarFields<T extends keyof ModelStructure> =
  Prisma.Enumerable<keyof ModelStructure[T]>;

export type ModelDelegate =
  | Prisma.RejectOnNotFound
  | Prisma.RejectPerOperation
  | undefined;

export type ModelTypes<T = unknown> = {
  kantorPln: {
    Where: Prisma.KantorPlnWhereInput;
    Select: Prisma.KantorPlnSelect;
    Include: unknown;
    Create: Prisma.KantorPlnCreateInput | Prisma.KantorPlnUncheckedCreateInput;
    Update: Prisma.KantorPlnUpdateInput | Prisma.KantorPlnUncheckedUpdateInput;
    Cursor: unknown;
    Order: Prisma.KantorPlnOrderByWithRelationInput;
    Delegate: Prisma.KantorPlnDelegate<ModelDelegate>;
    GroupBy: Prisma.KantorPlnGroupByOutputType;
    // @ts-ignore
    Return: Prisma.KantorPlnGetPayload<T>;
  };
  kantorPos: {
    Where: Prisma.KantorPosWhereInput;
    Select: Prisma.KantorPosSelect;
    Include: unknown;
    Create: Prisma.KantorPosCreateInput | Prisma.KantorPosUncheckedCreateInput;
    Update: Prisma.KantorPosUpdateInput | Prisma.KantorPosUncheckedUpdateInput;
    Cursor: unknown;
    Order: Prisma.KantorPosOrderByWithRelationInput;
    Delegate: Prisma.KantorPosDelegate<ModelDelegate>;
    GroupBy: Prisma.KantorPosGroupByOutputType;
    // @ts-ignore
    Return: Prisma.KantorPosGetPayload<T>;
  };
  spbu: {
    Where: Prisma.SpbuWhereInput;
    Select: Prisma.SpbuSelect;
    Include: unknown;
    Create: Prisma.SpbuCreateInput | Prisma.SpbuUncheckedCreateInput;
    Update: Prisma.SpbuUpdateInput | Prisma.SpbuUncheckedUpdateInput;
    Cursor: unknown;
    Order: Prisma.SpbuOrderByWithRelationInput;
    Delegate: Prisma.SpbuDelegate<ModelDelegate>;
    GroupBy: Prisma.SpbuGroupByOutputType;
    // @ts-ignore
    Return: Prisma.SpbuGetPayload<T>;
  };
  seedHistory: {
    Where: Prisma.SeedHistoryWhereInput;
    Select: Prisma.SeedHistorySelect;
    Include: unknown;
    Create:
      | Prisma.SeedHistoryCreateInput
      | Prisma.SeedHistoryUncheckedCreateInput;
    Update:
      | Prisma.SeedHistoryUpdateInput
      | Prisma.SeedHistoryUncheckedUpdateInput;
    Cursor: Prisma.SeedHistoryWhereUniqueInput;
    Order: Prisma.SeedHistoryOrderByWithRelationInput;
    Delegate: Prisma.SeedHistoryDelegate<ModelDelegate>;
    GroupBy: Prisma.SeedHistoryGroupByOutputType;
    // @ts-ignore
    Return: Prisma.SeedHistoryGetPayload<T>;
  };
  administrasiKabupaten: {
    Where: Prisma.AdministrasiKabupatenWhereInput;
    Select: Prisma.AdministrasiKabupatenSelect;
    Include: unknown;
    Create:
      | Prisma.AdministrasiKabupatenCreateInput
      | Prisma.AdministrasiKabupatenUncheckedCreateInput;
    Update:
      | Prisma.AdministrasiKabupatenUpdateInput
      | Prisma.AdministrasiKabupatenUncheckedUpdateInput;
    Cursor: unknown;
    Order: Prisma.AdministrasiKabupatenOrderByWithRelationInput;
    Delegate: Prisma.AdministrasiKabupatenDelegate<ModelDelegate>;
    GroupBy: Prisma.AdministrasiKabupatenGroupByOutputType;
    // @ts-ignore
    Return: Prisma.AdministrasiKabupatenGetPayload<T>;
  };
  administrasiKecamatan: {
    Where: Prisma.AdministrasiKecamatanWhereInput;
    Select: Prisma.AdministrasiKecamatanSelect;
    Include: unknown;
    Create:
      | Prisma.AdministrasiKecamatanCreateInput
      | Prisma.AdministrasiKecamatanUncheckedCreateInput;
    Update:
      | Prisma.AdministrasiKecamatanUpdateInput
      | Prisma.AdministrasiKecamatanUncheckedUpdateInput;
    Cursor: unknown;
    Order: Prisma.AdministrasiKecamatanOrderByWithRelationInput;
    Delegate: Prisma.AdministrasiKecamatanDelegate<ModelDelegate>;
    GroupBy: Prisma.AdministrasiKecamatanGroupByOutputType;
    // @ts-ignore
    Return: Prisma.AdministrasiKecamatanGetPayload<T>;
  };
};
